{"version":3,"file":"main.js","sources":["../../../../../sample/util.ts","../../../../../sample/resizeCanvas/main.ts"],"sourcesContent":["/** Shows an error dialog if getting an adapter wasn't successful. */\nexport function quitIfAdapterNotAvailable(\n  adapter: GPUAdapter | null\n): asserts adapter {\n  if (!('gpu' in navigator)) {\n    fail('navigator.gpu is not defined - WebGPU not available in this browser');\n  }\n\n  if (!adapter) {\n    fail(\"requestAdapter returned null - this sample can't run on this system\");\n  }\n}\n\n/**\n * Shows an error dialog if getting a adapter or device wasn't successful,\n * or if/when the device is lost or has an uncaptured error.\n */\nexport function quitIfWebGPUNotAvailable(\n  adapter: GPUAdapter | null,\n  device: GPUDevice | null\n): asserts device {\n  if (!device) {\n    quitIfAdapterNotAvailable(adapter);\n    fail('Unable to get a device for an unknown reason');\n    return;\n  }\n\n  device.lost.then((reason) => {\n    fail(`Device lost (\"${reason.reason}\"):\\n${reason.message}`);\n  });\n  device.onuncapturederror = (ev) => {\n    fail(`Uncaptured error:\\n${ev.error.message}`);\n  };\n}\n\n/** Fail by showing a console error, and dialog box if possible. */\nconst fail = (() => {\n  type ErrorOutput = { show(msg: string): void };\n\n  function createErrorOutput() {\n    if (typeof document === 'undefined') {\n      // Not implemented in workers.\n      return {\n        show(msg: string) {\n          console.error(msg);\n        },\n      };\n    }\n\n    const dialogBox = document.createElement('dialog');\n    dialogBox.close();\n    document.body.append(dialogBox);\n\n    const dialogText = document.createElement('pre');\n    dialogText.style.whiteSpace = 'pre-wrap';\n    dialogBox.append(dialogText);\n\n    const closeBtn = document.createElement('button');\n    closeBtn.textContent = 'OK';\n    closeBtn.onclick = () => dialogBox.close();\n    dialogBox.append(closeBtn);\n\n    return {\n      show(msg: string) {\n        // Don't overwrite the dialog message while it's still open\n        // (show the first error, not the most recent error).\n        if (!dialogBox.open) {\n          dialogText.textContent = msg;\n          dialogBox.showModal();\n        }\n      },\n    };\n  }\n\n  let output: ErrorOutput | undefined;\n\n  return (message: string) => {\n    if (!output) output = createErrorOutput();\n\n    output.show(message);\n    throw new Error(message);\n  };\n})();\n","import triangleVertWGSL from '../../shaders/triangle.vert.wgsl';\nimport redFragWGSL from '../../shaders/red.frag.wgsl';\nimport { quitIfWebGPUNotAvailable } from '../util';\n\nconst canvas = document.querySelector('canvas') as HTMLCanvasElement;\nconst adapter = await navigator.gpu?.requestAdapter();\nconst device = await adapter?.requestDevice();\nquitIfWebGPUNotAvailable(adapter, device);\n\nconst context = canvas.getContext('webgpu') as GPUCanvasContext;\n\nconst presentationFormat = navigator.gpu.getPreferredCanvasFormat();\n\nconst devicePixelRatio = window.devicePixelRatio;\ncanvas.width = canvas.clientWidth * devicePixelRatio;\ncanvas.height = canvas.clientHeight * devicePixelRatio;\n\ncontext.configure({\n  device,\n  format: presentationFormat,\n});\n\nconst sampleCount = 4;\n\nconst pipeline = device.createRenderPipeline({\n  layout: 'auto',\n  vertex: {\n    module: device.createShaderModule({\n      code: triangleVertWGSL,\n    }),\n  },\n  fragment: {\n    module: device.createShaderModule({\n      code: redFragWGSL,\n    }),\n    targets: [\n      {\n        format: presentationFormat,\n      },\n    ],\n  },\n  primitive: {\n    topology: 'triangle-list',\n  },\n  multisample: {\n    count: sampleCount,\n  },\n});\n\nlet renderTarget: GPUTexture | undefined = undefined;\nlet renderTargetView: GPUTextureView;\n\nfunction frame() {\n  const currentWidth = canvas.clientWidth * devicePixelRatio;\n  const currentHeight = canvas.clientHeight * devicePixelRatio;\n\n  // The canvas size is animating via CSS.\n  // When the size changes, we need to reallocate the render target.\n  // We also need to set the physical size of the canvas to match the computed CSS size.\n  if (\n    (currentWidth !== canvas.width ||\n      currentHeight !== canvas.height ||\n      !renderTargetView) &&\n    currentWidth &&\n    currentHeight\n  ) {\n    if (renderTarget !== undefined) {\n      // Destroy the previous render target\n      renderTarget.destroy();\n    }\n\n    // Setting the canvas width and height will automatically resize the textures returned\n    // when calling getCurrentTexture() on the context.\n    canvas.width = currentWidth;\n    canvas.height = currentHeight;\n\n    // Resize the multisampled render target to match the new canvas size.\n    renderTarget = device.createTexture({\n      size: [canvas.width, canvas.height],\n      sampleCount,\n      format: presentationFormat,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    renderTargetView = renderTarget.createView();\n  }\n\n  if (renderTargetView) {\n    const commandEncoder = device.createCommandEncoder();\n\n    const renderPassDescriptor: GPURenderPassDescriptor = {\n      colorAttachments: [\n        {\n          view: renderTargetView,\n          resolveTarget: context.getCurrentTexture().createView(),\n          clearValue: [0.2, 0.2, 0.2, 1.0],\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    };\n\n    const passEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);\n    passEncoder.setPipeline(pipeline);\n    passEncoder.draw(3);\n    passEncoder.end();\n\n    device.queue.submit([commandEncoder.finish()]);\n  }\n\n  requestAnimationFrame(frame);\n}\n\nrequestAnimationFrame(frame);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACM,SAAU,yBAAyB,CACvC,OAA0B,EAAA;AAE1B,IAAA,IAAI,EAAE,KAAK,IAAI,SAAS,CAAC,EAAE;QACzB,IAAI,CAAC,qEAAqE,CAAC;;IAG7E,IAAI,CAAC,OAAO,EAAE;QACZ,IAAI,CAAC,qEAAqE,CAAC;;AAE/E;AAEA;;;AAGG;AACa,SAAA,wBAAwB,CACtC,OAA0B,EAC1B,MAAwB,EAAA;IAExB,IAAI,CAAC,MAAM,EAAE;QACX,yBAAyB,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,8CAA8C,CAAC;QACpD;;IAGF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAI;QAC1B,IAAI,CAAC,CAAiB,cAAA,EAAA,MAAM,CAAC,MAAM,CAAQ,KAAA,EAAA,MAAM,CAAC,OAAO,CAAE,CAAA,CAAC;AAC9D,KAAC,CAAC;AACF,IAAA,MAAM,CAAC,iBAAiB,GAAG,CAAC,EAAE,KAAI;QAChC,IAAI,CAAC,sBAAsB,EAAE,CAAC,KAAK,CAAC,OAAO,CAAE,CAAA,CAAC;AAChD,KAAC;AACH;AAEA;AACA,MAAM,IAAI,GAAG,CAAC,MAAK;AAGjB,IAAA,SAAS,iBAAiB,GAAA;AACxB,QAAA,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;;YAEnC,OAAO;AACL,gBAAA,IAAI,CAAC,GAAW,EAAA;AACd,oBAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;iBACnB;aACF;;QAGH,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;QAClD,SAAS,CAAC,KAAK,EAAE;AACjB,QAAA,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QAE/B,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AAChD,QAAA,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU;AACxC,QAAA,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC;QAE5B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;AACjD,QAAA,QAAQ,CAAC,WAAW,GAAG,IAAI;QAC3B,QAAQ,CAAC,OAAO,GAAG,MAAM,SAAS,CAAC,KAAK,EAAE;AAC1C,QAAA,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;QAE1B,OAAO;AACL,YAAA,IAAI,CAAC,GAAW,EAAA;;;AAGd,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;AACnB,oBAAA,UAAU,CAAC,WAAW,GAAG,GAAG;oBAC5B,SAAS,CAAC,SAAS,EAAE;;aAExB;SACF;;AAGH,IAAA,IAAI,MAA+B;IAEnC,OAAO,CAAC,OAAe,KAAI;AACzB,QAAA,IAAI,CAAC,MAAM;YAAE,MAAM,GAAG,iBAAiB,EAAE;AAEzC,QAAA,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;AACpB,QAAA,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC;AAC1B,KAAC;AACH,CAAC,GAAG;;AC9EJ,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAsB;AACpE,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,GAAG,EAAE,cAAc,EAAE;AACrD,MAAM,MAAM,GAAG,MAAM,OAAO,EAAE,aAAa,EAAE;AAC7C,wBAAwB,CAAC,OAAO,EAAE,MAAM,CAAC;AAEzC,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAqB;AAE/D,MAAM,kBAAkB,GAAG,SAAS,CAAC,GAAG,CAAC,wBAAwB,EAAE;AAEnE,MAAM,gBAAgB,GAAG,MAAM,CAAC,gBAAgB;AAChD,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,WAAW,GAAG,gBAAgB;AACpD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,YAAY,GAAG,gBAAgB;AAEtD,OAAO,CAAC,SAAS,CAAC;IAChB,MAAM;AACN,IAAA,MAAM,EAAE,kBAAkB;AAC3B,CAAA,CAAC;AAEF,MAAM,WAAW,GAAG,CAAC;AAErB,MAAM,QAAQ,GAAG,MAAM,CAAC,oBAAoB,CAAC;AAC3C,IAAA,MAAM,EAAE,MAAM;AACd,IAAA,MAAM,EAAE;AACN,QAAA,MAAM,EAAE,MAAM,CAAC,kBAAkB,CAAC;AAChC,YAAA,IAAI,EAAE,gBAAgB;SACvB,CAAC;AACH,KAAA;AACD,IAAA,QAAQ,EAAE;AACR,QAAA,MAAM,EAAE,MAAM,CAAC,kBAAkB,CAAC;AAChC,YAAA,IAAI,EAAE,WAAW;SAClB,CAAC;AACF,QAAA,OAAO,EAAE;AACP,YAAA;AACE,gBAAA,MAAM,EAAE,kBAAkB;AAC3B,aAAA;AACF,SAAA;AACF,KAAA;AACD,IAAA,SAAS,EAAE;AACT,QAAA,QAAQ,EAAE,eAAe;AAC1B,KAAA;AACD,IAAA,WAAW,EAAE;AACX,QAAA,KAAK,EAAE,WAAW;AACnB,KAAA;AACF,CAAA,CAAC;AAEF,IAAI,YAAY,GAA2B,SAAS;AACpD,IAAI,gBAAgC;AAEpC,SAAS,KAAK,GAAA;AACZ,IAAA,MAAM,YAAY,GAAG,MAAM,CAAC,WAAW,GAAG,gBAAgB;AAC1D,IAAA,MAAM,aAAa,GAAG,MAAM,CAAC,YAAY,GAAG,gBAAgB;;;;AAK5D,IAAA,IACE,CAAC,YAAY,KAAK,MAAM,CAAC,KAAK;QAC5B,aAAa,KAAK,MAAM,CAAC,MAAM;AAC/B,QAAA,CAAC,gBAAgB;QACnB,YAAY;AACZ,QAAA,aAAa,EACb;AACA,QAAA,IAAI,YAAY,KAAK,SAAS,EAAE;;YAE9B,YAAY,CAAC,OAAO,EAAE;;;;AAKxB,QAAA,MAAM,CAAC,KAAK,GAAG,YAAY;AAC3B,QAAA,MAAM,CAAC,MAAM,GAAG,aAAa;;AAG7B,QAAA,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC;YAClC,IAAI,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;YACnC,WAAW;AACX,YAAA,MAAM,EAAE,kBAAkB;YAC1B,KAAK,EAAE,eAAe,CAAC,iBAAiB;AACzC,SAAA,CAAC;AAEF,QAAA,gBAAgB,GAAG,YAAY,CAAC,UAAU,EAAE;;IAG9C,IAAI,gBAAgB,EAAE;AACpB,QAAA,MAAM,cAAc,GAAG,MAAM,CAAC,oBAAoB,EAAE;AAEpD,QAAA,MAAM,oBAAoB,GAA4B;AACpD,YAAA,gBAAgB,EAAE;AAChB,gBAAA;AACE,oBAAA,IAAI,EAAE,gBAAgB;AACtB,oBAAA,aAAa,EAAE,OAAO,CAAC,iBAAiB,EAAE,CAAC,UAAU,EAAE;oBACvD,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAChC,oBAAA,MAAM,EAAE,OAAO;AACf,oBAAA,OAAO,EAAE,OAAO;AACjB,iBAAA;AACF,aAAA;SACF;QAED,MAAM,WAAW,GAAG,cAAc,CAAC,eAAe,CAAC,oBAAoB,CAAC;AACxE,QAAA,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC;AACjC,QAAA,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,WAAW,CAAC,GAAG,EAAE;AAEjB,QAAA,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC;;IAGhD,qBAAqB,CAAC,KAAK,CAAC;AAC9B;AAEA,qBAAqB,CAAC,KAAK,CAAC"}